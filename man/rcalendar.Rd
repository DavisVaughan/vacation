% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rcalendar.R
\name{rcalendar}
\alias{rcalendar}
\title{Construct an empty rcalendar}
\usage{
rcalendar(
  name = NULL,
  since = "1900-01-01",
  until = "2100-01-01",
  adjust_on = NULL,
  adjustment = NULL
)
}
\arguments{
\item{name}{\verb{[NULL / character(1)]}

An optional name for the calendar.}

\item{since}{\verb{[Date(1)]}

A start date for the rcalendar.}

\item{until}{\verb{[Date(1)]}

An end date for the rcalendar.}

\item{adjust_on}{\verb{[NULL / rschedule]}

If \code{NULL}, no adjustment is made.

Otherwise, an rschedule that defines when an adjustment should be made.
For example, set to an rschedule for "on weekends", and
supply an \code{adjustment} of \code{adj_nearest()} to roll holidays that fall
on a weekend to the nearest weekday.}

\item{adjustment}{\verb{[NULL / function]}

If \code{NULL}, no adjustment is made to the holiday.

Otherwise, an adjustment function to apply to problematic dates. Typically
one of the pre-existing adjustment functions, like
\code{\link[almanac:adj_nearest]{almanac::adj_nearest()}}.}
}
\value{
An empty rcalendar.
}
\description{
\code{rcalendar()} is the starting point for constructing a new custom calendar.
Holidays can be added to it with \code{\link[=add_rholiday]{add_rholiday()}}.

By default, \code{since}, \code{until}, \code{adjust_on}, and \code{adjustment} all propagate
to holidays added with \code{\link[=add_rholiday]{add_rholiday()}}.
}
\examples{
library(almanac)

cal <- rcalendar() \%>\%
  add_rholiday(hldy_christmas) \%>\%
  add_rholiday(hldy_new_years_day)

alma_search("2019-01-01", "2019-12-31", cal)
}
