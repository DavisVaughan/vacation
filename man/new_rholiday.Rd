% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rholiday.R
\name{new_rholiday}
\alias{new_rholiday}
\title{Create a new holiday}
\usage{
new_rholiday(
  name,
  since,
  until,
  generator,
  adjust_on = NULL,
  adjustment = NULL
)
}
\arguments{
\item{name}{\verb{[character(1)]}

A required name for the holiday.}

\item{since}{\verb{[Date(1)]}

The lower bound on where to begin looking for the holiday.}

\item{until}{\verb{[Date(1)]}

The upper bound on where to end looking for the holiday.}

\item{generator}{\verb{[function]}

A function that generates an rschedule for the holiday. The function
takes two arguments, \code{since} and \code{until}, which should be passed to
the created rschedule.}

\item{adjust_on}{\verb{[NULL / rschedule]}

If \code{NULL}, no adjustment is made to the holiday.

Otherwise, an rschedule that defines when an adjustment to the holiday
should be made. For example, set to an rschedule for "on weekends", and
supply an \code{adjustment} of \code{adj_nearest()} to roll the holiday to the
nearest weekday.}

\item{adjustment}{\verb{[NULL / function]}

If \code{NULL}, no adjustment is made to the holiday.

Otherwise, an adjustment function to apply to problematic dates. Typically
one of the pre-existing adjustment functions, like
\code{\link[almanac:adj_nearest]{almanac::adj_nearest()}}.}
}
\value{
A rholiday.
}
\description{
\code{new_rholiday()} constructs a new rholiday object. An rholiday is an
rschedule that can be used with any almanac function, like
\code{\link[almanac:alma_events]{almanac::alma_events()}}. rholidays can also be added to rcalendars through
\code{\link[=add_rholiday]{add_rholiday()}}.
}
\examples{
library(almanac)

thanksgiving_generator <- function(since, until) {
  yearly(since = since, until = until) \%>\%
    recur_on_ymonth("November") \%>\%
    recur_on_wday("Thursday", nth = 4)
}

thanksgiving <- new_rholiday(
  name = "thanksgiving",
  since = "1950-01-01",
  until = "1980-01-01",
  generator = thanksgiving_generator
)

thanksgiving

alma_events(thanksgiving)
}
