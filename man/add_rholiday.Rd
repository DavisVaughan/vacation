% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rcalendar.R
\name{add_rholiday}
\alias{add_rholiday}
\title{Add an rholiday to an rcalendar}
\usage{
add_rholiday(
  x,
  rholiday_fn,
  ...,
  since = NULL,
  until = NULL,
  adjust_on = NULL,
  adjustment = NULL
)
}
\arguments{
\item{x}{\verb{[rcalendar]}

An rcalendar.}

\item{rholiday_fn}{\verb{[function]}

An rholiday \emph{function}, such as \code{hldy_christmas}. The actual function
should be supplied, and \code{add_rholiday()} will take care of calling it
with the correct arguments.}

\item{...}{Not used.}

\item{since}{\verb{[NULL / Date(1)]}

If \code{NULL}, default to the \code{since} date of the rcalendar, \code{x}.

Otherwise, the lower bound on where to begin looking for the holiday.}

\item{until}{\verb{[NULL / Date(1)]}

If \code{NULL}, default to the \code{until} date of the rcalendar, \code{x}.

Otherwise, the upper bound on where to begin looking for the holiday.}

\item{adjust_on}{\verb{[NULL / rschedule]}

If \code{NULL}, default to the \code{adjust_on} of the rcalendar, \code{x}.

Otherwise, an rschedule that defines when an adjustment to the holiday
should be made. For example, set to an rschedule for "on weekends", and
supply an \code{adjustment} of \code{adj_nearest()} to roll the holiday to the
nearest weekday.}

\item{adjustment}{\verb{[NULL / function]}

If \code{NULL}, default to the \code{adjustment} of the rcalendar, \code{x}.

Otherwise, an adjustment function to apply to problematic dates. Typically
one of the pre-existing adjustment functions, like
\code{\link[almanac:adj_nearest]{almanac::adj_nearest()}}.}
}
\value{
\code{x}, with a new rholiday.
}
\description{
\code{add_rholiday()} adds a new holiday to a calendar. To add a holiday, pass
through the corresponding holiday \emph{function}, without the parenthesis.
\code{add_rholiday()} will take care of constructing the rholiday object with
the correct arguments.

Arguments passed on to the \code{rholiday_fn} (such as \code{since} and \code{adjust_on})
default to the corresponding arguments in the rcalendar, but can be
overridden at the rholiday level by supplying them in \code{add_rholiday()}.
}
\examples{
library(almanac)

cal <- rcalendar() \%>\%
  add_rholiday(hldy_christmas) \%>\%
  add_rholiday(hldy_new_years_day)

cal

alma_in("1999-12-25", cal)


on_weekends <- weekly() \%>\%
  recur_on_weekends()

# Construct a calendar that rolls weekend Christmas dates to
# the nearest weekday
cal2 <- rcalendar() \%>\%
  add_rholiday(
    hldy_christmas,
    adjust_on = on_weekends,
    adjustment = adj_nearest
  ) \%>\%
  add_rholiday(hldy_new_years_day)

alma_search("2004-01-01", "2010-01-01", cal2)
}
